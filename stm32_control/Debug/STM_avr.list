
STM_avr.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000010a8  080001a8  080001a8  000101a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08001250  08001258  00011258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08001250  08001250  00011258  2**0
                  CONTENTS
  4 .ARM          00000000  08001250  08001250  00011258  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001250  08001258  00011258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001250  08001250  00011250  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001254  08001254  00011254  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00011258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00011258  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00011258  2**0
                  CONTENTS, READONLY
 13 .debug_info   000011b4  00000000  00000000  00011288  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000373  00000000  00000000  0001243c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b0  00000000  00000000  000127b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000098  00000000  00000000  00012860  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00018fec  00000000  00000000  000128f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000a4b  00000000  00000000  0002b8e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008c5d7  00000000  00000000  0002c32f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000b8906  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000410  00000000  00000000  000b895c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08001238 	.word	0x08001238

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08001238 	.word	0x08001238

080001e8 <__aeabi_drsub>:
 80001e8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001ec:	e002      	b.n	80001f4 <__adddf3>
 80001ee:	bf00      	nop

080001f0 <__aeabi_dsub>:
 80001f0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001f4 <__adddf3>:
 80001f4:	b530      	push	{r4, r5, lr}
 80001f6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001fa:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001fe:	ea94 0f05 	teq	r4, r5
 8000202:	bf08      	it	eq
 8000204:	ea90 0f02 	teqeq	r0, r2
 8000208:	bf1f      	itttt	ne
 800020a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800020e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000212:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000216:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800021a:	f000 80e2 	beq.w	80003e2 <__adddf3+0x1ee>
 800021e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000222:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000226:	bfb8      	it	lt
 8000228:	426d      	neglt	r5, r5
 800022a:	dd0c      	ble.n	8000246 <__adddf3+0x52>
 800022c:	442c      	add	r4, r5
 800022e:	ea80 0202 	eor.w	r2, r0, r2
 8000232:	ea81 0303 	eor.w	r3, r1, r3
 8000236:	ea82 0000 	eor.w	r0, r2, r0
 800023a:	ea83 0101 	eor.w	r1, r3, r1
 800023e:	ea80 0202 	eor.w	r2, r0, r2
 8000242:	ea81 0303 	eor.w	r3, r1, r3
 8000246:	2d36      	cmp	r5, #54	; 0x36
 8000248:	bf88      	it	hi
 800024a:	bd30      	pophi	{r4, r5, pc}
 800024c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000250:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000254:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000258:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800025c:	d002      	beq.n	8000264 <__adddf3+0x70>
 800025e:	4240      	negs	r0, r0
 8000260:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000264:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000268:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800026c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000270:	d002      	beq.n	8000278 <__adddf3+0x84>
 8000272:	4252      	negs	r2, r2
 8000274:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000278:	ea94 0f05 	teq	r4, r5
 800027c:	f000 80a7 	beq.w	80003ce <__adddf3+0x1da>
 8000280:	f1a4 0401 	sub.w	r4, r4, #1
 8000284:	f1d5 0e20 	rsbs	lr, r5, #32
 8000288:	db0d      	blt.n	80002a6 <__adddf3+0xb2>
 800028a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800028e:	fa22 f205 	lsr.w	r2, r2, r5
 8000292:	1880      	adds	r0, r0, r2
 8000294:	f141 0100 	adc.w	r1, r1, #0
 8000298:	fa03 f20e 	lsl.w	r2, r3, lr
 800029c:	1880      	adds	r0, r0, r2
 800029e:	fa43 f305 	asr.w	r3, r3, r5
 80002a2:	4159      	adcs	r1, r3
 80002a4:	e00e      	b.n	80002c4 <__adddf3+0xd0>
 80002a6:	f1a5 0520 	sub.w	r5, r5, #32
 80002aa:	f10e 0e20 	add.w	lr, lr, #32
 80002ae:	2a01      	cmp	r2, #1
 80002b0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002b4:	bf28      	it	cs
 80002b6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002ba:	fa43 f305 	asr.w	r3, r3, r5
 80002be:	18c0      	adds	r0, r0, r3
 80002c0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002c4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002c8:	d507      	bpl.n	80002da <__adddf3+0xe6>
 80002ca:	f04f 0e00 	mov.w	lr, #0
 80002ce:	f1dc 0c00 	rsbs	ip, ip, #0
 80002d2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002d6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002da:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002de:	d31b      	bcc.n	8000318 <__adddf3+0x124>
 80002e0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002e4:	d30c      	bcc.n	8000300 <__adddf3+0x10c>
 80002e6:	0849      	lsrs	r1, r1, #1
 80002e8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002ec:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002f0:	f104 0401 	add.w	r4, r4, #1
 80002f4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002f8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002fc:	f080 809a 	bcs.w	8000434 <__adddf3+0x240>
 8000300:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000304:	bf08      	it	eq
 8000306:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800030a:	f150 0000 	adcs.w	r0, r0, #0
 800030e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000312:	ea41 0105 	orr.w	r1, r1, r5
 8000316:	bd30      	pop	{r4, r5, pc}
 8000318:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800031c:	4140      	adcs	r0, r0
 800031e:	eb41 0101 	adc.w	r1, r1, r1
 8000322:	3c01      	subs	r4, #1
 8000324:	bf28      	it	cs
 8000326:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800032a:	d2e9      	bcs.n	8000300 <__adddf3+0x10c>
 800032c:	f091 0f00 	teq	r1, #0
 8000330:	bf04      	itt	eq
 8000332:	4601      	moveq	r1, r0
 8000334:	2000      	moveq	r0, #0
 8000336:	fab1 f381 	clz	r3, r1
 800033a:	bf08      	it	eq
 800033c:	3320      	addeq	r3, #32
 800033e:	f1a3 030b 	sub.w	r3, r3, #11
 8000342:	f1b3 0220 	subs.w	r2, r3, #32
 8000346:	da0c      	bge.n	8000362 <__adddf3+0x16e>
 8000348:	320c      	adds	r2, #12
 800034a:	dd08      	ble.n	800035e <__adddf3+0x16a>
 800034c:	f102 0c14 	add.w	ip, r2, #20
 8000350:	f1c2 020c 	rsb	r2, r2, #12
 8000354:	fa01 f00c 	lsl.w	r0, r1, ip
 8000358:	fa21 f102 	lsr.w	r1, r1, r2
 800035c:	e00c      	b.n	8000378 <__adddf3+0x184>
 800035e:	f102 0214 	add.w	r2, r2, #20
 8000362:	bfd8      	it	le
 8000364:	f1c2 0c20 	rsble	ip, r2, #32
 8000368:	fa01 f102 	lsl.w	r1, r1, r2
 800036c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000370:	bfdc      	itt	le
 8000372:	ea41 010c 	orrle.w	r1, r1, ip
 8000376:	4090      	lslle	r0, r2
 8000378:	1ae4      	subs	r4, r4, r3
 800037a:	bfa2      	ittt	ge
 800037c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000380:	4329      	orrge	r1, r5
 8000382:	bd30      	popge	{r4, r5, pc}
 8000384:	ea6f 0404 	mvn.w	r4, r4
 8000388:	3c1f      	subs	r4, #31
 800038a:	da1c      	bge.n	80003c6 <__adddf3+0x1d2>
 800038c:	340c      	adds	r4, #12
 800038e:	dc0e      	bgt.n	80003ae <__adddf3+0x1ba>
 8000390:	f104 0414 	add.w	r4, r4, #20
 8000394:	f1c4 0220 	rsb	r2, r4, #32
 8000398:	fa20 f004 	lsr.w	r0, r0, r4
 800039c:	fa01 f302 	lsl.w	r3, r1, r2
 80003a0:	ea40 0003 	orr.w	r0, r0, r3
 80003a4:	fa21 f304 	lsr.w	r3, r1, r4
 80003a8:	ea45 0103 	orr.w	r1, r5, r3
 80003ac:	bd30      	pop	{r4, r5, pc}
 80003ae:	f1c4 040c 	rsb	r4, r4, #12
 80003b2:	f1c4 0220 	rsb	r2, r4, #32
 80003b6:	fa20 f002 	lsr.w	r0, r0, r2
 80003ba:	fa01 f304 	lsl.w	r3, r1, r4
 80003be:	ea40 0003 	orr.w	r0, r0, r3
 80003c2:	4629      	mov	r1, r5
 80003c4:	bd30      	pop	{r4, r5, pc}
 80003c6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ca:	4629      	mov	r1, r5
 80003cc:	bd30      	pop	{r4, r5, pc}
 80003ce:	f094 0f00 	teq	r4, #0
 80003d2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003d6:	bf06      	itte	eq
 80003d8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003dc:	3401      	addeq	r4, #1
 80003de:	3d01      	subne	r5, #1
 80003e0:	e74e      	b.n	8000280 <__adddf3+0x8c>
 80003e2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003e6:	bf18      	it	ne
 80003e8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003ec:	d029      	beq.n	8000442 <__adddf3+0x24e>
 80003ee:	ea94 0f05 	teq	r4, r5
 80003f2:	bf08      	it	eq
 80003f4:	ea90 0f02 	teqeq	r0, r2
 80003f8:	d005      	beq.n	8000406 <__adddf3+0x212>
 80003fa:	ea54 0c00 	orrs.w	ip, r4, r0
 80003fe:	bf04      	itt	eq
 8000400:	4619      	moveq	r1, r3
 8000402:	4610      	moveq	r0, r2
 8000404:	bd30      	pop	{r4, r5, pc}
 8000406:	ea91 0f03 	teq	r1, r3
 800040a:	bf1e      	ittt	ne
 800040c:	2100      	movne	r1, #0
 800040e:	2000      	movne	r0, #0
 8000410:	bd30      	popne	{r4, r5, pc}
 8000412:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000416:	d105      	bne.n	8000424 <__adddf3+0x230>
 8000418:	0040      	lsls	r0, r0, #1
 800041a:	4149      	adcs	r1, r1
 800041c:	bf28      	it	cs
 800041e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000422:	bd30      	pop	{r4, r5, pc}
 8000424:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000428:	bf3c      	itt	cc
 800042a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800042e:	bd30      	popcc	{r4, r5, pc}
 8000430:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000434:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000438:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800043c:	f04f 0000 	mov.w	r0, #0
 8000440:	bd30      	pop	{r4, r5, pc}
 8000442:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000446:	bf1a      	itte	ne
 8000448:	4619      	movne	r1, r3
 800044a:	4610      	movne	r0, r2
 800044c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000450:	bf1c      	itt	ne
 8000452:	460b      	movne	r3, r1
 8000454:	4602      	movne	r2, r0
 8000456:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800045a:	bf06      	itte	eq
 800045c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000460:	ea91 0f03 	teqeq	r1, r3
 8000464:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000468:	bd30      	pop	{r4, r5, pc}
 800046a:	bf00      	nop

0800046c <__aeabi_ui2d>:
 800046c:	f090 0f00 	teq	r0, #0
 8000470:	bf04      	itt	eq
 8000472:	2100      	moveq	r1, #0
 8000474:	4770      	bxeq	lr
 8000476:	b530      	push	{r4, r5, lr}
 8000478:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800047c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000480:	f04f 0500 	mov.w	r5, #0
 8000484:	f04f 0100 	mov.w	r1, #0
 8000488:	e750      	b.n	800032c <__adddf3+0x138>
 800048a:	bf00      	nop

0800048c <__aeabi_i2d>:
 800048c:	f090 0f00 	teq	r0, #0
 8000490:	bf04      	itt	eq
 8000492:	2100      	moveq	r1, #0
 8000494:	4770      	bxeq	lr
 8000496:	b530      	push	{r4, r5, lr}
 8000498:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800049c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004a0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004a4:	bf48      	it	mi
 80004a6:	4240      	negmi	r0, r0
 80004a8:	f04f 0100 	mov.w	r1, #0
 80004ac:	e73e      	b.n	800032c <__adddf3+0x138>
 80004ae:	bf00      	nop

080004b0 <__aeabi_f2d>:
 80004b0:	0042      	lsls	r2, r0, #1
 80004b2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004b6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004ba:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004be:	bf1f      	itttt	ne
 80004c0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004c4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004c8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004cc:	4770      	bxne	lr
 80004ce:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004d2:	bf08      	it	eq
 80004d4:	4770      	bxeq	lr
 80004d6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004da:	bf04      	itt	eq
 80004dc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004e0:	4770      	bxeq	lr
 80004e2:	b530      	push	{r4, r5, lr}
 80004e4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004f0:	e71c      	b.n	800032c <__adddf3+0x138>
 80004f2:	bf00      	nop

080004f4 <__aeabi_ul2d>:
 80004f4:	ea50 0201 	orrs.w	r2, r0, r1
 80004f8:	bf08      	it	eq
 80004fa:	4770      	bxeq	lr
 80004fc:	b530      	push	{r4, r5, lr}
 80004fe:	f04f 0500 	mov.w	r5, #0
 8000502:	e00a      	b.n	800051a <__aeabi_l2d+0x16>

08000504 <__aeabi_l2d>:
 8000504:	ea50 0201 	orrs.w	r2, r0, r1
 8000508:	bf08      	it	eq
 800050a:	4770      	bxeq	lr
 800050c:	b530      	push	{r4, r5, lr}
 800050e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000512:	d502      	bpl.n	800051a <__aeabi_l2d+0x16>
 8000514:	4240      	negs	r0, r0
 8000516:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800051a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800051e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000522:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000526:	f43f aed8 	beq.w	80002da <__adddf3+0xe6>
 800052a:	f04f 0203 	mov.w	r2, #3
 800052e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000532:	bf18      	it	ne
 8000534:	3203      	addne	r2, #3
 8000536:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800053a:	bf18      	it	ne
 800053c:	3203      	addne	r2, #3
 800053e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000542:	f1c2 0320 	rsb	r3, r2, #32
 8000546:	fa00 fc03 	lsl.w	ip, r0, r3
 800054a:	fa20 f002 	lsr.w	r0, r0, r2
 800054e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000552:	ea40 000e 	orr.w	r0, r0, lr
 8000556:	fa21 f102 	lsr.w	r1, r1, r2
 800055a:	4414      	add	r4, r2
 800055c:	e6bd      	b.n	80002da <__adddf3+0xe6>
 800055e:	bf00      	nop

08000560 <__aeabi_dmul>:
 8000560:	b570      	push	{r4, r5, r6, lr}
 8000562:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000566:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800056a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800056e:	bf1d      	ittte	ne
 8000570:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000574:	ea94 0f0c 	teqne	r4, ip
 8000578:	ea95 0f0c 	teqne	r5, ip
 800057c:	f000 f8de 	bleq	800073c <__aeabi_dmul+0x1dc>
 8000580:	442c      	add	r4, r5
 8000582:	ea81 0603 	eor.w	r6, r1, r3
 8000586:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800058a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800058e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000592:	bf18      	it	ne
 8000594:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000598:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800059c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005a0:	d038      	beq.n	8000614 <__aeabi_dmul+0xb4>
 80005a2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005ae:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005b2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005b6:	f04f 0600 	mov.w	r6, #0
 80005ba:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005be:	f09c 0f00 	teq	ip, #0
 80005c2:	bf18      	it	ne
 80005c4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005c8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005cc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005d0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005d4:	d204      	bcs.n	80005e0 <__aeabi_dmul+0x80>
 80005d6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005da:	416d      	adcs	r5, r5
 80005dc:	eb46 0606 	adc.w	r6, r6, r6
 80005e0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005e4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005e8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005ec:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005f0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005f4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005f8:	bf88      	it	hi
 80005fa:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005fe:	d81e      	bhi.n	800063e <__aeabi_dmul+0xde>
 8000600:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000604:	bf08      	it	eq
 8000606:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800060a:	f150 0000 	adcs.w	r0, r0, #0
 800060e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000612:	bd70      	pop	{r4, r5, r6, pc}
 8000614:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000618:	ea46 0101 	orr.w	r1, r6, r1
 800061c:	ea40 0002 	orr.w	r0, r0, r2
 8000620:	ea81 0103 	eor.w	r1, r1, r3
 8000624:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000628:	bfc2      	ittt	gt
 800062a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800062e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000632:	bd70      	popgt	{r4, r5, r6, pc}
 8000634:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000638:	f04f 0e00 	mov.w	lr, #0
 800063c:	3c01      	subs	r4, #1
 800063e:	f300 80ab 	bgt.w	8000798 <__aeabi_dmul+0x238>
 8000642:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000646:	bfde      	ittt	le
 8000648:	2000      	movle	r0, #0
 800064a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800064e:	bd70      	pople	{r4, r5, r6, pc}
 8000650:	f1c4 0400 	rsb	r4, r4, #0
 8000654:	3c20      	subs	r4, #32
 8000656:	da35      	bge.n	80006c4 <__aeabi_dmul+0x164>
 8000658:	340c      	adds	r4, #12
 800065a:	dc1b      	bgt.n	8000694 <__aeabi_dmul+0x134>
 800065c:	f104 0414 	add.w	r4, r4, #20
 8000660:	f1c4 0520 	rsb	r5, r4, #32
 8000664:	fa00 f305 	lsl.w	r3, r0, r5
 8000668:	fa20 f004 	lsr.w	r0, r0, r4
 800066c:	fa01 f205 	lsl.w	r2, r1, r5
 8000670:	ea40 0002 	orr.w	r0, r0, r2
 8000674:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000678:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800067c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000680:	fa21 f604 	lsr.w	r6, r1, r4
 8000684:	eb42 0106 	adc.w	r1, r2, r6
 8000688:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800068c:	bf08      	it	eq
 800068e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000692:	bd70      	pop	{r4, r5, r6, pc}
 8000694:	f1c4 040c 	rsb	r4, r4, #12
 8000698:	f1c4 0520 	rsb	r5, r4, #32
 800069c:	fa00 f304 	lsl.w	r3, r0, r4
 80006a0:	fa20 f005 	lsr.w	r0, r0, r5
 80006a4:	fa01 f204 	lsl.w	r2, r1, r4
 80006a8:	ea40 0002 	orr.w	r0, r0, r2
 80006ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006b0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006b4:	f141 0100 	adc.w	r1, r1, #0
 80006b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006bc:	bf08      	it	eq
 80006be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006c2:	bd70      	pop	{r4, r5, r6, pc}
 80006c4:	f1c4 0520 	rsb	r5, r4, #32
 80006c8:	fa00 f205 	lsl.w	r2, r0, r5
 80006cc:	ea4e 0e02 	orr.w	lr, lr, r2
 80006d0:	fa20 f304 	lsr.w	r3, r0, r4
 80006d4:	fa01 f205 	lsl.w	r2, r1, r5
 80006d8:	ea43 0302 	orr.w	r3, r3, r2
 80006dc:	fa21 f004 	lsr.w	r0, r1, r4
 80006e0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006e4:	fa21 f204 	lsr.w	r2, r1, r4
 80006e8:	ea20 0002 	bic.w	r0, r0, r2
 80006ec:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006f4:	bf08      	it	eq
 80006f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006fa:	bd70      	pop	{r4, r5, r6, pc}
 80006fc:	f094 0f00 	teq	r4, #0
 8000700:	d10f      	bne.n	8000722 <__aeabi_dmul+0x1c2>
 8000702:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000706:	0040      	lsls	r0, r0, #1
 8000708:	eb41 0101 	adc.w	r1, r1, r1
 800070c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000710:	bf08      	it	eq
 8000712:	3c01      	subeq	r4, #1
 8000714:	d0f7      	beq.n	8000706 <__aeabi_dmul+0x1a6>
 8000716:	ea41 0106 	orr.w	r1, r1, r6
 800071a:	f095 0f00 	teq	r5, #0
 800071e:	bf18      	it	ne
 8000720:	4770      	bxne	lr
 8000722:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000726:	0052      	lsls	r2, r2, #1
 8000728:	eb43 0303 	adc.w	r3, r3, r3
 800072c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000730:	bf08      	it	eq
 8000732:	3d01      	subeq	r5, #1
 8000734:	d0f7      	beq.n	8000726 <__aeabi_dmul+0x1c6>
 8000736:	ea43 0306 	orr.w	r3, r3, r6
 800073a:	4770      	bx	lr
 800073c:	ea94 0f0c 	teq	r4, ip
 8000740:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000744:	bf18      	it	ne
 8000746:	ea95 0f0c 	teqne	r5, ip
 800074a:	d00c      	beq.n	8000766 <__aeabi_dmul+0x206>
 800074c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000750:	bf18      	it	ne
 8000752:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000756:	d1d1      	bne.n	80006fc <__aeabi_dmul+0x19c>
 8000758:	ea81 0103 	eor.w	r1, r1, r3
 800075c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000760:	f04f 0000 	mov.w	r0, #0
 8000764:	bd70      	pop	{r4, r5, r6, pc}
 8000766:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800076a:	bf06      	itte	eq
 800076c:	4610      	moveq	r0, r2
 800076e:	4619      	moveq	r1, r3
 8000770:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000774:	d019      	beq.n	80007aa <__aeabi_dmul+0x24a>
 8000776:	ea94 0f0c 	teq	r4, ip
 800077a:	d102      	bne.n	8000782 <__aeabi_dmul+0x222>
 800077c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000780:	d113      	bne.n	80007aa <__aeabi_dmul+0x24a>
 8000782:	ea95 0f0c 	teq	r5, ip
 8000786:	d105      	bne.n	8000794 <__aeabi_dmul+0x234>
 8000788:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800078c:	bf1c      	itt	ne
 800078e:	4610      	movne	r0, r2
 8000790:	4619      	movne	r1, r3
 8000792:	d10a      	bne.n	80007aa <__aeabi_dmul+0x24a>
 8000794:	ea81 0103 	eor.w	r1, r1, r3
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007a0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007a4:	f04f 0000 	mov.w	r0, #0
 80007a8:	bd70      	pop	{r4, r5, r6, pc}
 80007aa:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007ae:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007b2:	bd70      	pop	{r4, r5, r6, pc}

080007b4 <__aeabi_ddiv>:
 80007b4:	b570      	push	{r4, r5, r6, lr}
 80007b6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007ba:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007be:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007c2:	bf1d      	ittte	ne
 80007c4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007c8:	ea94 0f0c 	teqne	r4, ip
 80007cc:	ea95 0f0c 	teqne	r5, ip
 80007d0:	f000 f8a7 	bleq	8000922 <__aeabi_ddiv+0x16e>
 80007d4:	eba4 0405 	sub.w	r4, r4, r5
 80007d8:	ea81 0e03 	eor.w	lr, r1, r3
 80007dc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007e0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007e4:	f000 8088 	beq.w	80008f8 <__aeabi_ddiv+0x144>
 80007e8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007ec:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007f0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007f4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007f8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007fc:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000800:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000804:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000808:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800080c:	429d      	cmp	r5, r3
 800080e:	bf08      	it	eq
 8000810:	4296      	cmpeq	r6, r2
 8000812:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000816:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800081a:	d202      	bcs.n	8000822 <__aeabi_ddiv+0x6e>
 800081c:	085b      	lsrs	r3, r3, #1
 800081e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000822:	1ab6      	subs	r6, r6, r2
 8000824:	eb65 0503 	sbc.w	r5, r5, r3
 8000828:	085b      	lsrs	r3, r3, #1
 800082a:	ea4f 0232 	mov.w	r2, r2, rrx
 800082e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000832:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000836:	ebb6 0e02 	subs.w	lr, r6, r2
 800083a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800083e:	bf22      	ittt	cs
 8000840:	1ab6      	subcs	r6, r6, r2
 8000842:	4675      	movcs	r5, lr
 8000844:	ea40 000c 	orrcs.w	r0, r0, ip
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	ea4f 0232 	mov.w	r2, r2, rrx
 800084e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000852:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000856:	bf22      	ittt	cs
 8000858:	1ab6      	subcs	r6, r6, r2
 800085a:	4675      	movcs	r5, lr
 800085c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000860:	085b      	lsrs	r3, r3, #1
 8000862:	ea4f 0232 	mov.w	r2, r2, rrx
 8000866:	ebb6 0e02 	subs.w	lr, r6, r2
 800086a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800086e:	bf22      	ittt	cs
 8000870:	1ab6      	subcs	r6, r6, r2
 8000872:	4675      	movcs	r5, lr
 8000874:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000878:	085b      	lsrs	r3, r3, #1
 800087a:	ea4f 0232 	mov.w	r2, r2, rrx
 800087e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000882:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000886:	bf22      	ittt	cs
 8000888:	1ab6      	subcs	r6, r6, r2
 800088a:	4675      	movcs	r5, lr
 800088c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000890:	ea55 0e06 	orrs.w	lr, r5, r6
 8000894:	d018      	beq.n	80008c8 <__aeabi_ddiv+0x114>
 8000896:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800089a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800089e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008a2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008a6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008aa:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008ae:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008b2:	d1c0      	bne.n	8000836 <__aeabi_ddiv+0x82>
 80008b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008b8:	d10b      	bne.n	80008d2 <__aeabi_ddiv+0x11e>
 80008ba:	ea41 0100 	orr.w	r1, r1, r0
 80008be:	f04f 0000 	mov.w	r0, #0
 80008c2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008c6:	e7b6      	b.n	8000836 <__aeabi_ddiv+0x82>
 80008c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008cc:	bf04      	itt	eq
 80008ce:	4301      	orreq	r1, r0
 80008d0:	2000      	moveq	r0, #0
 80008d2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008d6:	bf88      	it	hi
 80008d8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008dc:	f63f aeaf 	bhi.w	800063e <__aeabi_dmul+0xde>
 80008e0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008e4:	bf04      	itt	eq
 80008e6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008ea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008ee:	f150 0000 	adcs.w	r0, r0, #0
 80008f2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008f6:	bd70      	pop	{r4, r5, r6, pc}
 80008f8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008fc:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000900:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000904:	bfc2      	ittt	gt
 8000906:	ebd4 050c 	rsbsgt	r5, r4, ip
 800090a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800090e:	bd70      	popgt	{r4, r5, r6, pc}
 8000910:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000914:	f04f 0e00 	mov.w	lr, #0
 8000918:	3c01      	subs	r4, #1
 800091a:	e690      	b.n	800063e <__aeabi_dmul+0xde>
 800091c:	ea45 0e06 	orr.w	lr, r5, r6
 8000920:	e68d      	b.n	800063e <__aeabi_dmul+0xde>
 8000922:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000926:	ea94 0f0c 	teq	r4, ip
 800092a:	bf08      	it	eq
 800092c:	ea95 0f0c 	teqeq	r5, ip
 8000930:	f43f af3b 	beq.w	80007aa <__aeabi_dmul+0x24a>
 8000934:	ea94 0f0c 	teq	r4, ip
 8000938:	d10a      	bne.n	8000950 <__aeabi_ddiv+0x19c>
 800093a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800093e:	f47f af34 	bne.w	80007aa <__aeabi_dmul+0x24a>
 8000942:	ea95 0f0c 	teq	r5, ip
 8000946:	f47f af25 	bne.w	8000794 <__aeabi_dmul+0x234>
 800094a:	4610      	mov	r0, r2
 800094c:	4619      	mov	r1, r3
 800094e:	e72c      	b.n	80007aa <__aeabi_dmul+0x24a>
 8000950:	ea95 0f0c 	teq	r5, ip
 8000954:	d106      	bne.n	8000964 <__aeabi_ddiv+0x1b0>
 8000956:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800095a:	f43f aefd 	beq.w	8000758 <__aeabi_dmul+0x1f8>
 800095e:	4610      	mov	r0, r2
 8000960:	4619      	mov	r1, r3
 8000962:	e722      	b.n	80007aa <__aeabi_dmul+0x24a>
 8000964:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000968:	bf18      	it	ne
 800096a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800096e:	f47f aec5 	bne.w	80006fc <__aeabi_dmul+0x19c>
 8000972:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000976:	f47f af0d 	bne.w	8000794 <__aeabi_dmul+0x234>
 800097a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800097e:	f47f aeeb 	bne.w	8000758 <__aeabi_dmul+0x1f8>
 8000982:	e712      	b.n	80007aa <__aeabi_dmul+0x24a>

08000984 <__gedf2>:
 8000984:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000988:	e006      	b.n	8000998 <__cmpdf2+0x4>
 800098a:	bf00      	nop

0800098c <__ledf2>:
 800098c:	f04f 0c01 	mov.w	ip, #1
 8000990:	e002      	b.n	8000998 <__cmpdf2+0x4>
 8000992:	bf00      	nop

08000994 <__cmpdf2>:
 8000994:	f04f 0c01 	mov.w	ip, #1
 8000998:	f84d cd04 	str.w	ip, [sp, #-4]!
 800099c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009a0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009a4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009a8:	bf18      	it	ne
 80009aa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009ae:	d01b      	beq.n	80009e8 <__cmpdf2+0x54>
 80009b0:	b001      	add	sp, #4
 80009b2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009b6:	bf0c      	ite	eq
 80009b8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009bc:	ea91 0f03 	teqne	r1, r3
 80009c0:	bf02      	ittt	eq
 80009c2:	ea90 0f02 	teqeq	r0, r2
 80009c6:	2000      	moveq	r0, #0
 80009c8:	4770      	bxeq	lr
 80009ca:	f110 0f00 	cmn.w	r0, #0
 80009ce:	ea91 0f03 	teq	r1, r3
 80009d2:	bf58      	it	pl
 80009d4:	4299      	cmppl	r1, r3
 80009d6:	bf08      	it	eq
 80009d8:	4290      	cmpeq	r0, r2
 80009da:	bf2c      	ite	cs
 80009dc:	17d8      	asrcs	r0, r3, #31
 80009de:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009e2:	f040 0001 	orr.w	r0, r0, #1
 80009e6:	4770      	bx	lr
 80009e8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f0:	d102      	bne.n	80009f8 <__cmpdf2+0x64>
 80009f2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009f6:	d107      	bne.n	8000a08 <__cmpdf2+0x74>
 80009f8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a00:	d1d6      	bne.n	80009b0 <__cmpdf2+0x1c>
 8000a02:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a06:	d0d3      	beq.n	80009b0 <__cmpdf2+0x1c>
 8000a08:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a0c:	4770      	bx	lr
 8000a0e:	bf00      	nop

08000a10 <__aeabi_cdrcmple>:
 8000a10:	4684      	mov	ip, r0
 8000a12:	4610      	mov	r0, r2
 8000a14:	4662      	mov	r2, ip
 8000a16:	468c      	mov	ip, r1
 8000a18:	4619      	mov	r1, r3
 8000a1a:	4663      	mov	r3, ip
 8000a1c:	e000      	b.n	8000a20 <__aeabi_cdcmpeq>
 8000a1e:	bf00      	nop

08000a20 <__aeabi_cdcmpeq>:
 8000a20:	b501      	push	{r0, lr}
 8000a22:	f7ff ffb7 	bl	8000994 <__cmpdf2>
 8000a26:	2800      	cmp	r0, #0
 8000a28:	bf48      	it	mi
 8000a2a:	f110 0f00 	cmnmi.w	r0, #0
 8000a2e:	bd01      	pop	{r0, pc}

08000a30 <__aeabi_dcmpeq>:
 8000a30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a34:	f7ff fff4 	bl	8000a20 <__aeabi_cdcmpeq>
 8000a38:	bf0c      	ite	eq
 8000a3a:	2001      	moveq	r0, #1
 8000a3c:	2000      	movne	r0, #0
 8000a3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a42:	bf00      	nop

08000a44 <__aeabi_dcmplt>:
 8000a44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a48:	f7ff ffea 	bl	8000a20 <__aeabi_cdcmpeq>
 8000a4c:	bf34      	ite	cc
 8000a4e:	2001      	movcc	r0, #1
 8000a50:	2000      	movcs	r0, #0
 8000a52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a56:	bf00      	nop

08000a58 <__aeabi_dcmple>:
 8000a58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a5c:	f7ff ffe0 	bl	8000a20 <__aeabi_cdcmpeq>
 8000a60:	bf94      	ite	ls
 8000a62:	2001      	movls	r0, #1
 8000a64:	2000      	movhi	r0, #0
 8000a66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a6a:	bf00      	nop

08000a6c <__aeabi_dcmpge>:
 8000a6c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a70:	f7ff ffce 	bl	8000a10 <__aeabi_cdrcmple>
 8000a74:	bf94      	ite	ls
 8000a76:	2001      	movls	r0, #1
 8000a78:	2000      	movhi	r0, #0
 8000a7a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a7e:	bf00      	nop

08000a80 <__aeabi_dcmpgt>:
 8000a80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a84:	f7ff ffc4 	bl	8000a10 <__aeabi_cdrcmple>
 8000a88:	bf34      	ite	cc
 8000a8a:	2001      	movcc	r0, #1
 8000a8c:	2000      	movcs	r0, #0
 8000a8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a92:	bf00      	nop

08000a94 <__aeabi_d2uiz>:
 8000a94:	004a      	lsls	r2, r1, #1
 8000a96:	d211      	bcs.n	8000abc <__aeabi_d2uiz+0x28>
 8000a98:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a9c:	d211      	bcs.n	8000ac2 <__aeabi_d2uiz+0x2e>
 8000a9e:	d50d      	bpl.n	8000abc <__aeabi_d2uiz+0x28>
 8000aa0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000aa4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000aa8:	d40e      	bmi.n	8000ac8 <__aeabi_d2uiz+0x34>
 8000aaa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aae:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ab2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ab6:	fa23 f002 	lsr.w	r0, r3, r2
 8000aba:	4770      	bx	lr
 8000abc:	f04f 0000 	mov.w	r0, #0
 8000ac0:	4770      	bx	lr
 8000ac2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ac6:	d102      	bne.n	8000ace <__aeabi_d2uiz+0x3a>
 8000ac8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000acc:	4770      	bx	lr
 8000ace:	f04f 0000 	mov.w	r0, #0
 8000ad2:	4770      	bx	lr

08000ad4 <initialize_func>:
void delay_us(uint16_t time);
void delay_ms(uint16_t time);
void TIM6Config(void);

///////////////////////////////////////////////////
void initialize_func(){
 8000ad4:	b580      	push	{r7, lr}
 8000ad6:	af00      	add	r7, sp, #0

	SysClock_Config();
 8000ad8:	f000 f920 	bl	8000d1c <SysClock_Config>
	GPIOA_Config(6);
 8000adc:	2006      	movs	r0, #6
 8000ade:	f000 f97b 	bl	8000dd8 <GPIOA_Config>
	GPIOA_Config(7);
 8000ae2:	2007      	movs	r0, #7
 8000ae4:	f000 f978 	bl	8000dd8 <GPIOA_Config>
	//GPIOA_ExtInt_Config();
	TIM2_PWM_Config();
 8000ae8:	f000 f9be 	bl	8000e68 <TIM2_PWM_Config>
	UART3Config();
 8000aec:	f000 fa04 	bl	8000ef8 <UART3Config>
	TIM6Config();
 8000af0:	f000 fabc 	bl	800106c <TIM6Config>
	enable_encoderMode();
 8000af4:	f000 fb10 	bl	8001118 <enable_encoderMode>

}
 8000af8:	bf00      	nop
 8000afa:	bd80      	pop	{r7, pc}
 8000afc:	0000      	movs	r0, r0
	...

08000b00 <main>:
///////////////////////////////////////////////////
int main(void){
 8000b00:	b5b0      	push	{r4, r5, r7, lr}
 8000b02:	b09e      	sub	sp, #120	; 0x78
 8000b04:	af00      	add	r7, sp, #0

	initialize_func();
 8000b06:	f7ff ffe5 	bl	8000ad4 <initialize_func>
	char data[20];

	int32_t current_cnt;
	double error, derivative,integral, error_difference,pid;
	double previous_error = 0;
 8000b0a:	f04f 0200 	mov.w	r2, #0
 8000b0e:	f04f 0300 	mov.w	r3, #0
 8000b12:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60


    while(1){
    	current_cnt = TIM4->CNT-0xFFFF/2;
 8000b16:	4b7c      	ldr	r3, [pc, #496]	; (8000d08 <main+0x208>)
 8000b18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000b1a:	f5a3 43ff 	sub.w	r3, r3, #32640	; 0x7f80
 8000b1e:	3b7f      	subs	r3, #127	; 0x7f
 8000b20:	65fb      	str	r3, [r7, #92]	; 0x5c
    	error = (double)(current_cnt - set_point);
 8000b22:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000b24:	f5a3 531c 	sub.w	r3, r3, #9984	; 0x2700
 8000b28:	3b10      	subs	r3, #16
 8000b2a:	4618      	mov	r0, r3
 8000b2c:	f7ff fcae 	bl	800048c <__aeabi_i2d>
 8000b30:	4602      	mov	r2, r0
 8000b32:	460b      	mov	r3, r1
 8000b34:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
    	error_difference = error - previous_error;
 8000b38:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8000b3c:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8000b40:	f7ff fb56 	bl	80001f0 <__aeabi_dsub>
 8000b44:	4602      	mov	r2, r0
 8000b46:	460b      	mov	r3, r1
 8000b48:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
    	derivative = error_difference;
 8000b4c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8000b50:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40

		if(fabs(error) < integral_threshold)
 8000b54:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000b56:	623b      	str	r3, [r7, #32]
 8000b58:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000b5a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000b5e:	627b      	str	r3, [r7, #36]	; 0x24
 8000b60:	f04f 0200 	mov.w	r2, #0
 8000b64:	4b69      	ldr	r3, [pc, #420]	; (8000d0c <main+0x20c>)
 8000b66:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8000b6a:	f7ff ff6b 	bl	8000a44 <__aeabi_dcmplt>
 8000b6e:	4603      	mov	r3, r0
 8000b70:	2b00      	cmp	r3, #0
 8000b72:	d00a      	beq.n	8000b8a <main+0x8a>
			integral +=  error;
 8000b74:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8000b78:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 8000b7c:	f7ff fb3a 	bl	80001f4 <__adddf3>
 8000b80:	4602      	mov	r2, r0
 8000b82:	460b      	mov	r3, r1
 8000b84:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70
 8000b88:	e005      	b.n	8000b96 <main+0x96>
		else
			integral = 0;
 8000b8a:	f04f 0200 	mov.w	r2, #0
 8000b8e:	f04f 0300 	mov.w	r3, #0
 8000b92:	e9c7 231c 	strd	r2, r3, [r7, #112]	; 0x70


		pid = k_p * error +  k_d * derivative + k_i * integral;
 8000b96:	f04f 0200 	mov.w	r2, #0
 8000b9a:	4b5d      	ldr	r3, [pc, #372]	; (8000d10 <main+0x210>)
 8000b9c:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8000ba0:	f7ff fcde 	bl	8000560 <__aeabi_dmul>
 8000ba4:	4602      	mov	r2, r0
 8000ba6:	460b      	mov	r3, r1
 8000ba8:	4614      	mov	r4, r2
 8000baa:	461d      	mov	r5, r3
 8000bac:	f04f 0200 	mov.w	r2, #0
 8000bb0:	4b58      	ldr	r3, [pc, #352]	; (8000d14 <main+0x214>)
 8000bb2:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 8000bb6:	f7ff fcd3 	bl	8000560 <__aeabi_dmul>
 8000bba:	4602      	mov	r2, r0
 8000bbc:	460b      	mov	r3, r1
 8000bbe:	4620      	mov	r0, r4
 8000bc0:	4629      	mov	r1, r5
 8000bc2:	f7ff fb17 	bl	80001f4 <__adddf3>
 8000bc6:	4602      	mov	r2, r0
 8000bc8:	460b      	mov	r3, r1
 8000bca:	4614      	mov	r4, r2
 8000bcc:	461d      	mov	r5, r3
 8000bce:	f04f 0200 	mov.w	r2, #0
 8000bd2:	4b51      	ldr	r3, [pc, #324]	; (8000d18 <main+0x218>)
 8000bd4:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 8000bd8:	f7ff fcc2 	bl	8000560 <__aeabi_dmul>
 8000bdc:	4602      	mov	r2, r0
 8000bde:	460b      	mov	r3, r1
 8000be0:	4620      	mov	r0, r4
 8000be2:	4629      	mov	r1, r5
 8000be4:	f7ff fb06 	bl	80001f4 <__adddf3>
 8000be8:	4602      	mov	r2, r0
 8000bea:	460b      	mov	r3, r1
 8000bec:	e9c7 231a 	strd	r2, r3, [r7, #104]	; 0x68


		if(fabs(pid) >26667)
 8000bf0:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8000bf2:	61bb      	str	r3, [r7, #24]
 8000bf4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8000bf6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000bfa:	61fb      	str	r3, [r7, #28]
 8000bfc:	a340      	add	r3, pc, #256	; (adr r3, 8000d00 <main+0x200>)
 8000bfe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000c02:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8000c06:	f7ff ff3b 	bl	8000a80 <__aeabi_dcmpgt>
 8000c0a:	4603      	mov	r3, r0
 8000c0c:	2b00      	cmp	r3, #0
 8000c0e:	d018      	beq.n	8000c42 <main+0x142>
			pid = (pid/fabs(pid))*26667;
 8000c10:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8000c12:	613b      	str	r3, [r7, #16]
 8000c14:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8000c16:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000c1a:	617b      	str	r3, [r7, #20]
 8000c1c:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8000c20:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8000c24:	f7ff fdc6 	bl	80007b4 <__aeabi_ddiv>
 8000c28:	4602      	mov	r2, r0
 8000c2a:	460b      	mov	r3, r1
 8000c2c:	4610      	mov	r0, r2
 8000c2e:	4619      	mov	r1, r3
 8000c30:	a333      	add	r3, pc, #204	; (adr r3, 8000d00 <main+0x200>)
 8000c32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000c36:	f7ff fc93 	bl	8000560 <__aeabi_dmul>
 8000c3a:	4602      	mov	r2, r0
 8000c3c:	460b      	mov	r3, r1
 8000c3e:	e9c7 231a 	strd	r2, r3, [r7, #104]	; 0x68



		if(error > 0){
 8000c42:	f04f 0200 	mov.w	r2, #0
 8000c46:	f04f 0300 	mov.w	r3, #0
 8000c4a:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8000c4e:	f7ff ff17 	bl	8000a80 <__aeabi_dcmpgt>
 8000c52:	4603      	mov	r3, r0
 8000c54:	2b00      	cmp	r3, #0
 8000c56:	d012      	beq.n	8000c7e <main+0x17e>
			TIM2->CCR1 = fabs(pid); /* pulse width 1/3 of the period */
 8000c58:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8000c5a:	60bb      	str	r3, [r7, #8]
 8000c5c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8000c5e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000c62:	60fb      	str	r3, [r7, #12]
 8000c64:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8000c68:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8000c6c:	f7ff ff12 	bl	8000a94 <__aeabi_d2uiz>
 8000c70:	4603      	mov	r3, r0
 8000c72:	6363      	str	r3, [r4, #52]	; 0x34
			TIM2->CCR4 = 1 - 1;
 8000c74:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000c78:	2200      	movs	r2, #0
 8000c7a:	641a      	str	r2, [r3, #64]	; 0x40
 8000c7c:	e025      	b.n	8000cca <main+0x1ca>
		}
		else if(error < 0){
 8000c7e:	f04f 0200 	mov.w	r2, #0
 8000c82:	f04f 0300 	mov.w	r3, #0
 8000c86:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8000c8a:	f7ff fedb 	bl	8000a44 <__aeabi_dcmplt>
 8000c8e:	4603      	mov	r3, r0
 8000c90:	2b00      	cmp	r3, #0
 8000c92:	d012      	beq.n	8000cba <main+0x1ba>
			TIM2->CCR1 = 1 - 1; /* pulse width 1/3 of the period */
 8000c94:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000c98:	2200      	movs	r2, #0
 8000c9a:	635a      	str	r2, [r3, #52]	; 0x34
			TIM2->CCR4 = fabs(pid);
 8000c9c:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8000c9e:	603b      	str	r3, [r7, #0]
 8000ca0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8000ca2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000ca6:	607b      	str	r3, [r7, #4]
 8000ca8:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8000cac:	e9d7 0100 	ldrd	r0, r1, [r7]
 8000cb0:	f7ff fef0 	bl	8000a94 <__aeabi_d2uiz>
 8000cb4:	4603      	mov	r3, r0
 8000cb6:	6423      	str	r3, [r4, #64]	; 0x40
 8000cb8:	e007      	b.n	8000cca <main+0x1ca>
		}
		else{
			TIM2->CCR1 = 1 - 1; /* pulse width 1/3 of the period */
 8000cba:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000cbe:	2200      	movs	r2, #0
 8000cc0:	635a      	str	r2, [r3, #52]	; 0x34
			TIM2->CCR4 = 1 - 1;
 8000cc2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	641a      	str	r2, [r3, #64]	; 0x40
		}
		previous_error = error;
 8000cca:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8000cce:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60

		itoa(current_cnt,data,20);
 8000cd2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000cd4:	b29b      	uxth	r3, r3
 8000cd6:	f107 012c 	add.w	r1, r7, #44	; 0x2c
 8000cda:	2214      	movs	r2, #20
 8000cdc:	4618      	mov	r0, r3
 8000cde:	f000 f97d 	bl	8000fdc <itoa>
		UART3SendString(data);
 8000ce2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000ce6:	4618      	mov	r0, r3
 8000ce8:	f000 f962 	bl	8000fb0 <UART3SendString>
		UART3SendCh('\n');
 8000cec:	200a      	movs	r0, #10
 8000cee:	f000 f947 	bl	8000f80 <UART3SendCh>

		delay_ms(10);
 8000cf2:	200a      	movs	r0, #10
 8000cf4:	f000 f9f8 	bl	80010e8 <delay_ms>
    	current_cnt = TIM4->CNT-0xFFFF/2;
 8000cf8:	e70d      	b.n	8000b16 <main+0x16>
 8000cfa:	bf00      	nop
 8000cfc:	f3af 8000 	nop.w
 8000d00:	00000000 	.word	0x00000000
 8000d04:	40da0ac0 	.word	0x40da0ac0
 8000d08:	40000800 	.word	0x40000800
 8000d0c:	40740000 	.word	0x40740000
 8000d10:	40540000 	.word	0x40540000
 8000d14:	40080000 	.word	0x40080000
 8000d18:	40240000 	.word	0x40240000

08000d1c <SysClock_Config>:

    }
}
///////////////////////////////////////////////////
void SysClock_Config(void){
 8000d1c:	b480      	push	{r7}
 8000d1e:	af00      	add	r7, sp, #0
	RCC->CR  |= RCC_CR_HSEON;
 8000d20:	4b29      	ldr	r3, [pc, #164]	; (8000dc8 <SysClock_Config+0xac>)
 8000d22:	681b      	ldr	r3, [r3, #0]
 8000d24:	4a28      	ldr	r2, [pc, #160]	; (8000dc8 <SysClock_Config+0xac>)
 8000d26:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000d2a:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_HSERDY));
 8000d2c:	bf00      	nop
 8000d2e:	4b26      	ldr	r3, [pc, #152]	; (8000dc8 <SysClock_Config+0xac>)
 8000d30:	681b      	ldr	r3, [r3, #0]
 8000d32:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000d36:	2b00      	cmp	r3, #0
 8000d38:	d0f9      	beq.n	8000d2e <SysClock_Config+0x12>

	RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000d3a:	4b23      	ldr	r3, [pc, #140]	; (8000dc8 <SysClock_Config+0xac>)
 8000d3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d3e:	4a22      	ldr	r2, [pc, #136]	; (8000dc8 <SysClock_Config+0xac>)
 8000d40:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000d44:	6413      	str	r3, [r2, #64]	; 0x40
	PWR->CR |= PWR_CR_VOS;
 8000d46:	4b21      	ldr	r3, [pc, #132]	; (8000dcc <SysClock_Config+0xb0>)
 8000d48:	681b      	ldr	r3, [r3, #0]
 8000d4a:	4a20      	ldr	r2, [pc, #128]	; (8000dcc <SysClock_Config+0xb0>)
 8000d4c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000d50:	6013      	str	r3, [r2, #0]

	FLASH->ACR |= FLASH_ACR_ICEN | FLASH_ACR_PRFTEN | FLASH_ACR_DCEN | FLASH_ACR_LATENCY_5WS;
 8000d52:	4b1f      	ldr	r3, [pc, #124]	; (8000dd0 <SysClock_Config+0xb4>)
 8000d54:	681b      	ldr	r3, [r3, #0]
 8000d56:	4a1e      	ldr	r2, [pc, #120]	; (8000dd0 <SysClock_Config+0xb4>)
 8000d58:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8000d5c:	f043 0305 	orr.w	r3, r3, #5
 8000d60:	6013      	str	r3, [r2, #0]

	RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 8000d62:	4b19      	ldr	r3, [pc, #100]	; (8000dc8 <SysClock_Config+0xac>)
 8000d64:	4a18      	ldr	r2, [pc, #96]	; (8000dc8 <SysClock_Config+0xac>)
 8000d66:	689b      	ldr	r3, [r3, #8]
 8000d68:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 8000d6a:	4b17      	ldr	r3, [pc, #92]	; (8000dc8 <SysClock_Config+0xac>)
 8000d6c:	689b      	ldr	r3, [r3, #8]
 8000d6e:	4a16      	ldr	r2, [pc, #88]	; (8000dc8 <SysClock_Config+0xac>)
 8000d70:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 8000d74:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 8000d76:	4b14      	ldr	r3, [pc, #80]	; (8000dc8 <SysClock_Config+0xac>)
 8000d78:	689b      	ldr	r3, [r3, #8]
 8000d7a:	4a13      	ldr	r2, [pc, #76]	; (8000dc8 <SysClock_Config+0xac>)
 8000d7c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000d80:	6093      	str	r3, [r2, #8]

	RCC->PLLCFGR =  (PLL_M << 0) | (PLL_N << 6) | (PLL_P << 16) | RCC_PLLCFGR_PLLSRC_HSE;
 8000d82:	4b11      	ldr	r3, [pc, #68]	; (8000dc8 <SysClock_Config+0xac>)
 8000d84:	4a13      	ldr	r2, [pc, #76]	; (8000dd4 <SysClock_Config+0xb8>)
 8000d86:	605a      	str	r2, [r3, #4]
	RCC->CR |= RCC_CR_PLLON;
 8000d88:	4b0f      	ldr	r3, [pc, #60]	; (8000dc8 <SysClock_Config+0xac>)
 8000d8a:	681b      	ldr	r3, [r3, #0]
 8000d8c:	4a0e      	ldr	r2, [pc, #56]	; (8000dc8 <SysClock_Config+0xac>)
 8000d8e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000d92:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_PLLRDY));
 8000d94:	bf00      	nop
 8000d96:	4b0c      	ldr	r3, [pc, #48]	; (8000dc8 <SysClock_Config+0xac>)
 8000d98:	681b      	ldr	r3, [r3, #0]
 8000d9a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000d9e:	2b00      	cmp	r3, #0
 8000da0:	d0f9      	beq.n	8000d96 <SysClock_Config+0x7a>

	RCC->CFGR |= RCC_CFGR_SW_PLL;
 8000da2:	4b09      	ldr	r3, [pc, #36]	; (8000dc8 <SysClock_Config+0xac>)
 8000da4:	689b      	ldr	r3, [r3, #8]
 8000da6:	4a08      	ldr	r2, [pc, #32]	; (8000dc8 <SysClock_Config+0xac>)
 8000da8:	f043 0302 	orr.w	r3, r3, #2
 8000dac:	6093      	str	r3, [r2, #8]
	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 8000dae:	bf00      	nop
 8000db0:	4b05      	ldr	r3, [pc, #20]	; (8000dc8 <SysClock_Config+0xac>)
 8000db2:	689b      	ldr	r3, [r3, #8]
 8000db4:	f003 030c 	and.w	r3, r3, #12
 8000db8:	2b08      	cmp	r3, #8
 8000dba:	d1f9      	bne.n	8000db0 <SysClock_Config+0x94>
}
 8000dbc:	bf00      	nop
 8000dbe:	bf00      	nop
 8000dc0:	46bd      	mov	sp, r7
 8000dc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dc6:	4770      	bx	lr
 8000dc8:	40023800 	.word	0x40023800
 8000dcc:	40007000 	.word	0x40007000
 8000dd0:	40023c00 	.word	0x40023c00
 8000dd4:	00402a04 	.word	0x00402a04

08000dd8 <GPIOA_Config>:
		 counter++;
	EXTI->PR |= 1<<0;
}
*/
/**********************************************************/
void GPIOA_Config(int PIN_NO){
 8000dd8:	b480      	push	{r7}
 8000dda:	b083      	sub	sp, #12
 8000ddc:	af00      	add	r7, sp, #0
 8000dde:	6078      	str	r0, [r7, #4]
	RCC->AHB1ENR |= GPIO_En(0);;
 8000de0:	4b1f      	ldr	r3, [pc, #124]	; (8000e60 <GPIOA_Config+0x88>)
 8000de2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000de4:	4a1e      	ldr	r2, [pc, #120]	; (8000e60 <GPIOA_Config+0x88>)
 8000de6:	f043 0301 	orr.w	r3, r3, #1
 8000dea:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA->MODER |= GPIO_En(2*PIN_NO);
 8000dec:	4b1d      	ldr	r3, [pc, #116]	; (8000e64 <GPIOA_Config+0x8c>)
 8000dee:	681b      	ldr	r3, [r3, #0]
 8000df0:	687a      	ldr	r2, [r7, #4]
 8000df2:	0052      	lsls	r2, r2, #1
 8000df4:	2101      	movs	r1, #1
 8000df6:	fa01 f202 	lsl.w	r2, r1, r2
 8000dfa:	4611      	mov	r1, r2
 8000dfc:	4a19      	ldr	r2, [pc, #100]	; (8000e64 <GPIOA_Config+0x8c>)
 8000dfe:	430b      	orrs	r3, r1
 8000e00:	6013      	str	r3, [r2, #0]
	GPIOA->OTYPER &= ~(GPIO_En(PIN_NO));
 8000e02:	4b18      	ldr	r3, [pc, #96]	; (8000e64 <GPIOA_Config+0x8c>)
 8000e04:	685b      	ldr	r3, [r3, #4]
 8000e06:	2101      	movs	r1, #1
 8000e08:	687a      	ldr	r2, [r7, #4]
 8000e0a:	fa01 f202 	lsl.w	r2, r1, r2
 8000e0e:	43d2      	mvns	r2, r2
 8000e10:	4611      	mov	r1, r2
 8000e12:	4a14      	ldr	r2, [pc, #80]	; (8000e64 <GPIOA_Config+0x8c>)
 8000e14:	400b      	ands	r3, r1
 8000e16:	6053      	str	r3, [r2, #4]
	GPIOA->OSPEEDR |= GPIO_En(2*PIN_NO+1);
 8000e18:	4b12      	ldr	r3, [pc, #72]	; (8000e64 <GPIOA_Config+0x8c>)
 8000e1a:	689b      	ldr	r3, [r3, #8]
 8000e1c:	687a      	ldr	r2, [r7, #4]
 8000e1e:	0052      	lsls	r2, r2, #1
 8000e20:	3201      	adds	r2, #1
 8000e22:	2101      	movs	r1, #1
 8000e24:	fa01 f202 	lsl.w	r2, r1, r2
 8000e28:	4611      	mov	r1, r2
 8000e2a:	4a0e      	ldr	r2, [pc, #56]	; (8000e64 <GPIOA_Config+0x8c>)
 8000e2c:	430b      	orrs	r3, r1
 8000e2e:	6093      	str	r3, [r2, #8]
	GPIOA->PUPDR &= ~(GPIO_En(2*PIN_NO) | GPIO_En(2*PIN_NO+1));
 8000e30:	4b0c      	ldr	r3, [pc, #48]	; (8000e64 <GPIOA_Config+0x8c>)
 8000e32:	68db      	ldr	r3, [r3, #12]
 8000e34:	687a      	ldr	r2, [r7, #4]
 8000e36:	0052      	lsls	r2, r2, #1
 8000e38:	2101      	movs	r1, #1
 8000e3a:	4091      	lsls	r1, r2
 8000e3c:	687a      	ldr	r2, [r7, #4]
 8000e3e:	0052      	lsls	r2, r2, #1
 8000e40:	3201      	adds	r2, #1
 8000e42:	2001      	movs	r0, #1
 8000e44:	fa00 f202 	lsl.w	r2, r0, r2
 8000e48:	430a      	orrs	r2, r1
 8000e4a:	43d2      	mvns	r2, r2
 8000e4c:	4611      	mov	r1, r2
 8000e4e:	4a05      	ldr	r2, [pc, #20]	; (8000e64 <GPIOA_Config+0x8c>)
 8000e50:	400b      	ands	r3, r1
 8000e52:	60d3      	str	r3, [r2, #12]
}
 8000e54:	bf00      	nop
 8000e56:	370c      	adds	r7, #12
 8000e58:	46bd      	mov	sp, r7
 8000e5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e5e:	4770      	bx	lr
 8000e60:	40023800 	.word	0x40023800
 8000e64:	40020000 	.word	0x40020000

08000e68 <TIM2_PWM_Config>:
/**********************************************************/
void TIM2_PWM_Config(){
 8000e68:	b480      	push	{r7}
 8000e6a:	af00      	add	r7, sp, #0
	//Enable and Configure TIMER2
	GPIOA->AFR[0] |= 0x00101000; /* PA5 pin for tim2 */
 8000e6c:	4b20      	ldr	r3, [pc, #128]	; (8000ef0 <TIM2_PWM_Config+0x88>)
 8000e6e:	6a1b      	ldr	r3, [r3, #32]
 8000e70:	4a1f      	ldr	r2, [pc, #124]	; (8000ef0 <TIM2_PWM_Config+0x88>)
 8000e72:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000e76:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000e7a:	6213      	str	r3, [r2, #32]
	GPIOA->MODER &= ~0x00000CC0;
 8000e7c:	4b1c      	ldr	r3, [pc, #112]	; (8000ef0 <TIM2_PWM_Config+0x88>)
 8000e7e:	681b      	ldr	r3, [r3, #0]
 8000e80:	4a1b      	ldr	r2, [pc, #108]	; (8000ef0 <TIM2_PWM_Config+0x88>)
 8000e82:	f423 634c 	bic.w	r3, r3, #3264	; 0xcc0
 8000e86:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= 0x00000880;
 8000e88:	4b19      	ldr	r3, [pc, #100]	; (8000ef0 <TIM2_PWM_Config+0x88>)
 8000e8a:	681b      	ldr	r3, [r3, #0]
 8000e8c:	4a18      	ldr	r2, [pc, #96]	; (8000ef0 <TIM2_PWM_Config+0x88>)
 8000e8e:	f443 6308 	orr.w	r3, r3, #2176	; 0x880
 8000e92:	6013      	str	r3, [r2, #0]
	/* setup TIM2 */

	RCC->APB1ENR |= (1<<0);
 8000e94:	4b17      	ldr	r3, [pc, #92]	; (8000ef4 <TIM2_PWM_Config+0x8c>)
 8000e96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e98:	4a16      	ldr	r2, [pc, #88]	; (8000ef4 <TIM2_PWM_Config+0x8c>)
 8000e9a:	f043 0301 	orr.w	r3, r3, #1
 8000e9e:	6413      	str	r3, [r2, #64]	; 0x40

	TIM2->ARR = 26667 - 1; /* divided by 26667 */
 8000ea0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ea4:	f646 022a 	movw	r2, #26666	; 0x682a
 8000ea8:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM2->CNT = 0;
 8000eaa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000eae:	2200      	movs	r2, #0
 8000eb0:	625a      	str	r2, [r3, #36]	; 0x24

	TIM2->CCMR1 = 0x0060; /* PWM mode */
 8000eb2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000eb6:	2260      	movs	r2, #96	; 0x60
 8000eb8:	619a      	str	r2, [r3, #24]
	TIM2->CCMR2 = 0x6000;
 8000eba:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ebe:	f44f 42c0 	mov.w	r2, #24576	; 0x6000
 8000ec2:	61da      	str	r2, [r3, #28]

	TIM2->CCER = 1 | GPIO_En(12); /* enable PWM Ch1 & Ch 4*/
 8000ec4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ec8:	f241 0201 	movw	r2, #4097	; 0x1001
 8000ecc:	621a      	str	r2, [r3, #32]

	TIM2->CCR1 = 1 - 1; /* pulse width 1/3 of the period */
 8000ece:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ed2:	2200      	movs	r2, #0
 8000ed4:	635a      	str	r2, [r3, #52]	; 0x34
	TIM2->CCR4 = 1 - 1;
 8000ed6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000eda:	2200      	movs	r2, #0
 8000edc:	641a      	str	r2, [r3, #64]	; 0x40

	TIM2->CR1 = 1; /*enable timer */
 8000ede:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ee2:	2201      	movs	r2, #1
 8000ee4:	601a      	str	r2, [r3, #0]
}
 8000ee6:	bf00      	nop
 8000ee8:	46bd      	mov	sp, r7
 8000eea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eee:	4770      	bx	lr
 8000ef0:	40020000 	.word	0x40020000
 8000ef4:	40023800 	.word	0x40023800

08000ef8 <UART3Config>:
/**********************************************************/
void UART3Config(void){
 8000ef8:	b480      	push	{r7}
 8000efa:	af00      	add	r7, sp, #0
	RCC->APB1ENR |= GPIO_En(18);
 8000efc:	4b1d      	ldr	r3, [pc, #116]	; (8000f74 <UART3Config+0x7c>)
 8000efe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f00:	4a1c      	ldr	r2, [pc, #112]	; (8000f74 <UART3Config+0x7c>)
 8000f02:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000f06:	6413      	str	r3, [r2, #64]	; 0x40
	RCC->AHB1ENR |= GPIO_En(1);
 8000f08:	4b1a      	ldr	r3, [pc, #104]	; (8000f74 <UART3Config+0x7c>)
 8000f0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f0c:	4a19      	ldr	r2, [pc, #100]	; (8000f74 <UART3Config+0x7c>)
 8000f0e:	f043 0302 	orr.w	r3, r3, #2
 8000f12:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOB->MODER |=(2<<20)|(2<<22);
 8000f14:	4b18      	ldr	r3, [pc, #96]	; (8000f78 <UART3Config+0x80>)
 8000f16:	681b      	ldr	r3, [r3, #0]
 8000f18:	4a17      	ldr	r2, [pc, #92]	; (8000f78 <UART3Config+0x80>)
 8000f1a:	f443 0320 	orr.w	r3, r3, #10485760	; 0xa00000
 8000f1e:	6013      	str	r3, [r2, #0]
	GPIOB->OSPEEDR |= ((3<<4)|(3<<6));
 8000f20:	4b15      	ldr	r3, [pc, #84]	; (8000f78 <UART3Config+0x80>)
 8000f22:	689b      	ldr	r3, [r3, #8]
 8000f24:	4a14      	ldr	r2, [pc, #80]	; (8000f78 <UART3Config+0x80>)
 8000f26:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8000f2a:	6093      	str	r3, [r2, #8]
	GPIOB->AFR[1] |= (7<<8) | (7<<12);
 8000f2c:	4b12      	ldr	r3, [pc, #72]	; (8000f78 <UART3Config+0x80>)
 8000f2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f30:	4a11      	ldr	r2, [pc, #68]	; (8000f78 <UART3Config+0x80>)
 8000f32:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8000f36:	6253      	str	r3, [r2, #36]	; 0x24

	USART3->CR1 = 0x00;
 8000f38:	4b10      	ldr	r3, [pc, #64]	; (8000f7c <UART3Config+0x84>)
 8000f3a:	2200      	movs	r2, #0
 8000f3c:	60da      	str	r2, [r3, #12]
	USART3->CR1 |= (1<<13);
 8000f3e:	4b0f      	ldr	r3, [pc, #60]	; (8000f7c <UART3Config+0x84>)
 8000f40:	68db      	ldr	r3, [r3, #12]
 8000f42:	4a0e      	ldr	r2, [pc, #56]	; (8000f7c <UART3Config+0x84>)
 8000f44:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000f48:	60d3      	str	r3, [r2, #12]
	USART3->BRR = (13<<0) | (22<<4);
 8000f4a:	4b0c      	ldr	r3, [pc, #48]	; (8000f7c <UART3Config+0x84>)
 8000f4c:	f240 126d 	movw	r2, #365	; 0x16d
 8000f50:	609a      	str	r2, [r3, #8]

	USART3->CR1 |= (1<<2);
 8000f52:	4b0a      	ldr	r3, [pc, #40]	; (8000f7c <UART3Config+0x84>)
 8000f54:	68db      	ldr	r3, [r3, #12]
 8000f56:	4a09      	ldr	r2, [pc, #36]	; (8000f7c <UART3Config+0x84>)
 8000f58:	f043 0304 	orr.w	r3, r3, #4
 8000f5c:	60d3      	str	r3, [r2, #12]
	USART3->CR1 |= (1<<3);
 8000f5e:	4b07      	ldr	r3, [pc, #28]	; (8000f7c <UART3Config+0x84>)
 8000f60:	68db      	ldr	r3, [r3, #12]
 8000f62:	4a06      	ldr	r2, [pc, #24]	; (8000f7c <UART3Config+0x84>)
 8000f64:	f043 0308 	orr.w	r3, r3, #8
 8000f68:	60d3      	str	r3, [r2, #12]
}
 8000f6a:	bf00      	nop
 8000f6c:	46bd      	mov	sp, r7
 8000f6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f72:	4770      	bx	lr
 8000f74:	40023800 	.word	0x40023800
 8000f78:	40020400 	.word	0x40020400
 8000f7c:	40004800 	.word	0x40004800

08000f80 <UART3SendCh>:
/***************************************************************/
void UART3SendCh(uint8_t ch){
 8000f80:	b480      	push	{r7}
 8000f82:	b083      	sub	sp, #12
 8000f84:	af00      	add	r7, sp, #0
 8000f86:	4603      	mov	r3, r0
 8000f88:	71fb      	strb	r3, [r7, #7]
	USART3->DR = ch;
 8000f8a:	4a08      	ldr	r2, [pc, #32]	; (8000fac <UART3SendCh+0x2c>)
 8000f8c:	79fb      	ldrb	r3, [r7, #7]
 8000f8e:	6053      	str	r3, [r2, #4]
	while(!(USART3->SR & (1<<6)));
 8000f90:	bf00      	nop
 8000f92:	4b06      	ldr	r3, [pc, #24]	; (8000fac <UART3SendCh+0x2c>)
 8000f94:	681b      	ldr	r3, [r3, #0]
 8000f96:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000f9a:	2b00      	cmp	r3, #0
 8000f9c:	d0f9      	beq.n	8000f92 <UART3SendCh+0x12>
}
 8000f9e:	bf00      	nop
 8000fa0:	bf00      	nop
 8000fa2:	370c      	adds	r7, #12
 8000fa4:	46bd      	mov	sp, r7
 8000fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000faa:	4770      	bx	lr
 8000fac:	40004800 	.word	0x40004800

08000fb0 <UART3SendString>:
/***************************************************************/
void UART3SendString (char *string){
 8000fb0:	b580      	push	{r7, lr}
 8000fb2:	b082      	sub	sp, #8
 8000fb4:	af00      	add	r7, sp, #0
 8000fb6:	6078      	str	r0, [r7, #4]
	while (*string) UART3SendCh(*string++);
 8000fb8:	e006      	b.n	8000fc8 <UART3SendString+0x18>
 8000fba:	687b      	ldr	r3, [r7, #4]
 8000fbc:	1c5a      	adds	r2, r3, #1
 8000fbe:	607a      	str	r2, [r7, #4]
 8000fc0:	781b      	ldrb	r3, [r3, #0]
 8000fc2:	4618      	mov	r0, r3
 8000fc4:	f7ff ffdc 	bl	8000f80 <UART3SendCh>
 8000fc8:	687b      	ldr	r3, [r7, #4]
 8000fca:	781b      	ldrb	r3, [r3, #0]
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d1f4      	bne.n	8000fba <UART3SendString+0xa>
}
 8000fd0:	bf00      	nop
 8000fd2:	bf00      	nop
 8000fd4:	3708      	adds	r7, #8
 8000fd6:	46bd      	mov	sp, r7
 8000fd8:	bd80      	pop	{r7, pc}
	...

08000fdc <itoa>:
	while (!(USART3->SR & (1<<5)));
	Temp = USART3->DR;
	return Temp;
}
/**********************************************************/
void itoa(uint16_t number,char* data, int length){
 8000fdc:	b480      	push	{r7}
 8000fde:	b089      	sub	sp, #36	; 0x24
 8000fe0:	af00      	add	r7, sp, #0
 8000fe2:	4603      	mov	r3, r0
 8000fe4:	60b9      	str	r1, [r7, #8]
 8000fe6:	607a      	str	r2, [r7, #4]
 8000fe8:	81fb      	strh	r3, [r7, #14]
	uint16_t temp,i=0;
 8000fea:	2300      	movs	r3, #0
 8000fec:	83fb      	strh	r3, [r7, #30]

	for(int j=0; j< length;j++)
 8000fee:	2300      	movs	r3, #0
 8000ff0:	61bb      	str	r3, [r7, #24]
 8000ff2:	e007      	b.n	8001004 <itoa+0x28>
		*(data+j)='0';
 8000ff4:	69bb      	ldr	r3, [r7, #24]
 8000ff6:	68ba      	ldr	r2, [r7, #8]
 8000ff8:	4413      	add	r3, r2
 8000ffa:	2230      	movs	r2, #48	; 0x30
 8000ffc:	701a      	strb	r2, [r3, #0]
	for(int j=0; j< length;j++)
 8000ffe:	69bb      	ldr	r3, [r7, #24]
 8001000:	3301      	adds	r3, #1
 8001002:	61bb      	str	r3, [r7, #24]
 8001004:	69ba      	ldr	r2, [r7, #24]
 8001006:	687b      	ldr	r3, [r7, #4]
 8001008:	429a      	cmp	r2, r3
 800100a:	dbf3      	blt.n	8000ff4 <itoa+0x18>

	while(number != 0){
 800100c:	e022      	b.n	8001054 <itoa+0x78>
		temp = number - (number/10)*10;
 800100e:	89fb      	ldrh	r3, [r7, #14]
 8001010:	4a15      	ldr	r2, [pc, #84]	; (8001068 <itoa+0x8c>)
 8001012:	fba2 2303 	umull	r2, r3, r2, r3
 8001016:	08db      	lsrs	r3, r3, #3
 8001018:	b29b      	uxth	r3, r3
 800101a:	461a      	mov	r2, r3
 800101c:	0352      	lsls	r2, r2, #13
 800101e:	1ad2      	subs	r2, r2, r3
 8001020:	0092      	lsls	r2, r2, #2
 8001022:	1ad3      	subs	r3, r2, r3
 8001024:	005b      	lsls	r3, r3, #1
 8001026:	b29a      	uxth	r2, r3
 8001028:	89fb      	ldrh	r3, [r7, #14]
 800102a:	4413      	add	r3, r2
 800102c:	82fb      	strh	r3, [r7, #22]
		*(data+length-i) = temp + '0';
 800102e:	8afb      	ldrh	r3, [r7, #22]
 8001030:	b2da      	uxtb	r2, r3
 8001032:	6879      	ldr	r1, [r7, #4]
 8001034:	8bfb      	ldrh	r3, [r7, #30]
 8001036:	1acb      	subs	r3, r1, r3
 8001038:	68b9      	ldr	r1, [r7, #8]
 800103a:	440b      	add	r3, r1
 800103c:	3230      	adds	r2, #48	; 0x30
 800103e:	b2d2      	uxtb	r2, r2
 8001040:	701a      	strb	r2, [r3, #0]
		number = number/10;
 8001042:	89fb      	ldrh	r3, [r7, #14]
 8001044:	4a08      	ldr	r2, [pc, #32]	; (8001068 <itoa+0x8c>)
 8001046:	fba2 2303 	umull	r2, r3, r2, r3
 800104a:	08db      	lsrs	r3, r3, #3
 800104c:	81fb      	strh	r3, [r7, #14]
		i++;
 800104e:	8bfb      	ldrh	r3, [r7, #30]
 8001050:	3301      	adds	r3, #1
 8001052:	83fb      	strh	r3, [r7, #30]
	while(number != 0){
 8001054:	89fb      	ldrh	r3, [r7, #14]
 8001056:	2b00      	cmp	r3, #0
 8001058:	d1d9      	bne.n	800100e <itoa+0x32>
	}
}
 800105a:	bf00      	nop
 800105c:	bf00      	nop
 800105e:	3724      	adds	r7, #36	; 0x24
 8001060:	46bd      	mov	sp, r7
 8001062:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001066:	4770      	bx	lr
 8001068:	cccccccd 	.word	0xcccccccd

0800106c <TIM6Config>:
/**********************************************************/
void TIM6Config(void){
 800106c:	b480      	push	{r7}
 800106e:	af00      	add	r7, sp, #0
	RCC->APB1ENR |= (1<<4);
 8001070:	4b0f      	ldr	r3, [pc, #60]	; (80010b0 <TIM6Config+0x44>)
 8001072:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001074:	4a0e      	ldr	r2, [pc, #56]	; (80010b0 <TIM6Config+0x44>)
 8001076:	f043 0310 	orr.w	r3, r3, #16
 800107a:	6413      	str	r3, [r2, #64]	; 0x40
	TIM6->PSC = 83;
 800107c:	4b0d      	ldr	r3, [pc, #52]	; (80010b4 <TIM6Config+0x48>)
 800107e:	2253      	movs	r2, #83	; 0x53
 8001080:	629a      	str	r2, [r3, #40]	; 0x28
	TIM6->ARR = 0xFFFF;
 8001082:	4b0c      	ldr	r3, [pc, #48]	; (80010b4 <TIM6Config+0x48>)
 8001084:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001088:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM6->CR1 |= (1<<0);
 800108a:	4b0a      	ldr	r3, [pc, #40]	; (80010b4 <TIM6Config+0x48>)
 800108c:	681b      	ldr	r3, [r3, #0]
 800108e:	4a09      	ldr	r2, [pc, #36]	; (80010b4 <TIM6Config+0x48>)
 8001090:	f043 0301 	orr.w	r3, r3, #1
 8001094:	6013      	str	r3, [r2, #0]
	while(!(TIM6->SR & (1<<0)));
 8001096:	bf00      	nop
 8001098:	4b06      	ldr	r3, [pc, #24]	; (80010b4 <TIM6Config+0x48>)
 800109a:	691b      	ldr	r3, [r3, #16]
 800109c:	f003 0301 	and.w	r3, r3, #1
 80010a0:	2b00      	cmp	r3, #0
 80010a2:	d0f9      	beq.n	8001098 <TIM6Config+0x2c>
}
 80010a4:	bf00      	nop
 80010a6:	bf00      	nop
 80010a8:	46bd      	mov	sp, r7
 80010aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ae:	4770      	bx	lr
 80010b0:	40023800 	.word	0x40023800
 80010b4:	40001000 	.word	0x40001000

080010b8 <delay_us>:
/**********************************************************/
void delay_us(uint16_t time){
 80010b8:	b480      	push	{r7}
 80010ba:	b083      	sub	sp, #12
 80010bc:	af00      	add	r7, sp, #0
 80010be:	4603      	mov	r3, r0
 80010c0:	80fb      	strh	r3, [r7, #6]
	TIM6->CNT = 0;
 80010c2:	4b08      	ldr	r3, [pc, #32]	; (80010e4 <delay_us+0x2c>)
 80010c4:	2200      	movs	r2, #0
 80010c6:	625a      	str	r2, [r3, #36]	; 0x24
	while (TIM6->CNT < time);
 80010c8:	bf00      	nop
 80010ca:	4b06      	ldr	r3, [pc, #24]	; (80010e4 <delay_us+0x2c>)
 80010cc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80010ce:	88fb      	ldrh	r3, [r7, #6]
 80010d0:	429a      	cmp	r2, r3
 80010d2:	d3fa      	bcc.n	80010ca <delay_us+0x12>
}
 80010d4:	bf00      	nop
 80010d6:	bf00      	nop
 80010d8:	370c      	adds	r7, #12
 80010da:	46bd      	mov	sp, r7
 80010dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e0:	4770      	bx	lr
 80010e2:	bf00      	nop
 80010e4:	40001000 	.word	0x40001000

080010e8 <delay_ms>:
/**********************************************************/
void delay_ms(uint16_t time){
 80010e8:	b580      	push	{r7, lr}
 80010ea:	b084      	sub	sp, #16
 80010ec:	af00      	add	r7, sp, #0
 80010ee:	4603      	mov	r3, r0
 80010f0:	80fb      	strh	r3, [r7, #6]
	for(uint16_t i=0; i<time; i++){
 80010f2:	2300      	movs	r3, #0
 80010f4:	81fb      	strh	r3, [r7, #14]
 80010f6:	e006      	b.n	8001106 <delay_ms+0x1e>
		delay_us(1000);
 80010f8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80010fc:	f7ff ffdc 	bl	80010b8 <delay_us>
	for(uint16_t i=0; i<time; i++){
 8001100:	89fb      	ldrh	r3, [r7, #14]
 8001102:	3301      	adds	r3, #1
 8001104:	81fb      	strh	r3, [r7, #14]
 8001106:	89fa      	ldrh	r2, [r7, #14]
 8001108:	88fb      	ldrh	r3, [r7, #6]
 800110a:	429a      	cmp	r2, r3
 800110c:	d3f4      	bcc.n	80010f8 <delay_ms+0x10>
	}
}
 800110e:	bf00      	nop
 8001110:	bf00      	nop
 8001112:	3710      	adds	r7, #16
 8001114:	46bd      	mov	sp, r7
 8001116:	bd80      	pop	{r7, pc}

08001118 <enable_encoderMode>:
/************************************************************/
void enable_encoderMode(){
 8001118:	b480      	push	{r7}
 800111a:	af00      	add	r7, sp, #0
	RCC->AHB1ENR = (1<<1);
 800111c:	4b1c      	ldr	r3, [pc, #112]	; (8001190 <enable_encoderMode+0x78>)
 800111e:	2202      	movs	r2, #2
 8001120:	631a      	str	r2, [r3, #48]	; 0x30
	RCC->APB1ENR |= (1<<2);
 8001122:	4b1b      	ldr	r3, [pc, #108]	; (8001190 <enable_encoderMode+0x78>)
 8001124:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001126:	4a1a      	ldr	r2, [pc, #104]	; (8001190 <enable_encoderMode+0x78>)
 8001128:	f043 0304 	orr.w	r3, r3, #4
 800112c:	6413      	str	r3, [r2, #64]	; 0x40
	GPIOB->MODER |= (2<<12)|(2<<14);
 800112e:	4b19      	ldr	r3, [pc, #100]	; (8001194 <enable_encoderMode+0x7c>)
 8001130:	681b      	ldr	r3, [r3, #0]
 8001132:	4a18      	ldr	r2, [pc, #96]	; (8001194 <enable_encoderMode+0x7c>)
 8001134:	f443 4320 	orr.w	r3, r3, #40960	; 0xa000
 8001138:	6013      	str	r3, [r2, #0]
	GPIOB->AFR[0] = 0x22000000;
 800113a:	4b16      	ldr	r3, [pc, #88]	; (8001194 <enable_encoderMode+0x7c>)
 800113c:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
 8001140:	621a      	str	r2, [r3, #32]

	TIM4->ARR  = 0xFFFF;
 8001142:	4b15      	ldr	r3, [pc, #84]	; (8001198 <enable_encoderMode+0x80>)
 8001144:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001148:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM4->CCER &= ~((1<<1) | (1<<5) |(1<<3) |(1<<7));
 800114a:	4b13      	ldr	r3, [pc, #76]	; (8001198 <enable_encoderMode+0x80>)
 800114c:	6a1b      	ldr	r3, [r3, #32]
 800114e:	4a12      	ldr	r2, [pc, #72]	; (8001198 <enable_encoderMode+0x80>)
 8001150:	f023 03aa 	bic.w	r3, r3, #170	; 0xaa
 8001154:	6213      	str	r3, [r2, #32]
	TIM4->CCMR1 |= ((1<<0) | (1<<8));
 8001156:	4b10      	ldr	r3, [pc, #64]	; (8001198 <enable_encoderMode+0x80>)
 8001158:	699b      	ldr	r3, [r3, #24]
 800115a:	4a0f      	ldr	r2, [pc, #60]	; (8001198 <enable_encoderMode+0x80>)
 800115c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001160:	f043 0301 	orr.w	r3, r3, #1
 8001164:	6193      	str	r3, [r2, #24]

	TIM4->SMCR |= (1<<0)|(1<<1);
 8001166:	4b0c      	ldr	r3, [pc, #48]	; (8001198 <enable_encoderMode+0x80>)
 8001168:	689b      	ldr	r3, [r3, #8]
 800116a:	4a0b      	ldr	r2, [pc, #44]	; (8001198 <enable_encoderMode+0x80>)
 800116c:	f043 0303 	orr.w	r3, r3, #3
 8001170:	6093      	str	r3, [r2, #8]
	TIM4->CNT = 0xFFFF/2;
 8001172:	4b09      	ldr	r3, [pc, #36]	; (8001198 <enable_encoderMode+0x80>)
 8001174:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8001178:	625a      	str	r2, [r3, #36]	; 0x24
	TIM4->CR1 |= (1<<0);
 800117a:	4b07      	ldr	r3, [pc, #28]	; (8001198 <enable_encoderMode+0x80>)
 800117c:	681b      	ldr	r3, [r3, #0]
 800117e:	4a06      	ldr	r2, [pc, #24]	; (8001198 <enable_encoderMode+0x80>)
 8001180:	f043 0301 	orr.w	r3, r3, #1
 8001184:	6013      	str	r3, [r2, #0]
}
 8001186:	bf00      	nop
 8001188:	46bd      	mov	sp, r7
 800118a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800118e:	4770      	bx	lr
 8001190:	40023800 	.word	0x40023800
 8001194:	40020400 	.word	0x40020400
 8001198:	40000800 	.word	0x40000800

0800119c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800119c:	480d      	ldr	r0, [pc, #52]	; (80011d4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800119e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80011a0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80011a4:	480c      	ldr	r0, [pc, #48]	; (80011d8 <LoopForever+0x6>)
  ldr r1, =_edata
 80011a6:	490d      	ldr	r1, [pc, #52]	; (80011dc <LoopForever+0xa>)
  ldr r2, =_sidata
 80011a8:	4a0d      	ldr	r2, [pc, #52]	; (80011e0 <LoopForever+0xe>)
  movs r3, #0
 80011aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80011ac:	e002      	b.n	80011b4 <LoopCopyDataInit>

080011ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80011ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80011b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80011b2:	3304      	adds	r3, #4

080011b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80011b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80011b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80011b8:	d3f9      	bcc.n	80011ae <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80011ba:	4a0a      	ldr	r2, [pc, #40]	; (80011e4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80011bc:	4c0a      	ldr	r4, [pc, #40]	; (80011e8 <LoopForever+0x16>)
  movs r3, #0
 80011be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80011c0:	e001      	b.n	80011c6 <LoopFillZerobss>

080011c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80011c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80011c4:	3204      	adds	r2, #4

080011c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80011c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80011c8:	d3fb      	bcc.n	80011c2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80011ca:	f000 f811 	bl	80011f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80011ce:	f7ff fc97 	bl	8000b00 <main>

080011d2 <LoopForever>:

LoopForever:
    b LoopForever
 80011d2:	e7fe      	b.n	80011d2 <LoopForever>
  ldr   r0, =_estack
 80011d4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80011d8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80011dc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80011e0:	08001258 	.word	0x08001258
  ldr r2, =_sbss
 80011e4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80011e8:	2000001c 	.word	0x2000001c

080011ec <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80011ec:	e7fe      	b.n	80011ec <ADC_IRQHandler>
	...

080011f0 <__libc_init_array>:
 80011f0:	b570      	push	{r4, r5, r6, lr}
 80011f2:	4d0d      	ldr	r5, [pc, #52]	; (8001228 <__libc_init_array+0x38>)
 80011f4:	4c0d      	ldr	r4, [pc, #52]	; (800122c <__libc_init_array+0x3c>)
 80011f6:	1b64      	subs	r4, r4, r5
 80011f8:	10a4      	asrs	r4, r4, #2
 80011fa:	2600      	movs	r6, #0
 80011fc:	42a6      	cmp	r6, r4
 80011fe:	d109      	bne.n	8001214 <__libc_init_array+0x24>
 8001200:	4d0b      	ldr	r5, [pc, #44]	; (8001230 <__libc_init_array+0x40>)
 8001202:	4c0c      	ldr	r4, [pc, #48]	; (8001234 <__libc_init_array+0x44>)
 8001204:	f000 f818 	bl	8001238 <_init>
 8001208:	1b64      	subs	r4, r4, r5
 800120a:	10a4      	asrs	r4, r4, #2
 800120c:	2600      	movs	r6, #0
 800120e:	42a6      	cmp	r6, r4
 8001210:	d105      	bne.n	800121e <__libc_init_array+0x2e>
 8001212:	bd70      	pop	{r4, r5, r6, pc}
 8001214:	f855 3b04 	ldr.w	r3, [r5], #4
 8001218:	4798      	blx	r3
 800121a:	3601      	adds	r6, #1
 800121c:	e7ee      	b.n	80011fc <__libc_init_array+0xc>
 800121e:	f855 3b04 	ldr.w	r3, [r5], #4
 8001222:	4798      	blx	r3
 8001224:	3601      	adds	r6, #1
 8001226:	e7f2      	b.n	800120e <__libc_init_array+0x1e>
 8001228:	08001250 	.word	0x08001250
 800122c:	08001250 	.word	0x08001250
 8001230:	08001250 	.word	0x08001250
 8001234:	08001254 	.word	0x08001254

08001238 <_init>:
 8001238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800123a:	bf00      	nop
 800123c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800123e:	bc08      	pop	{r3}
 8001240:	469e      	mov	lr, r3
 8001242:	4770      	bx	lr

08001244 <_fini>:
 8001244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001246:	bf00      	nop
 8001248:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800124a:	bc08      	pop	{r3}
 800124c:	469e      	mov	lr, r3
 800124e:	4770      	bx	lr
